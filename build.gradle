buildscript {
    logger.lifecycle( "Java home: ${System.getProperty('java.home')}")
    logger.lifecycle( "Java version: ${System.getProperty('java.version')}")
}

plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.1'
    id 'io.spring.dependency-management' version '1.1.5'
    id 'com.gorylenko.gradle-git-properties' version '2.4.1'
}

group = 'com.example'
version = {
    String major = project.property 'build.version.major'
    String minor = project.property 'build.version.minor'
    String build = project.property 'build.number'

    "$major.$minor.$build"
}()

bootJar {
    manifest.attributes (
            'Implementation-Version': "$version"
    )
}

springBoot {
    mainClass = 'com.example.webprojdemo.WebProjDemoApplication'
    buildInfo {
        version = version
    }
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    runtimeOnly 'com.mysql:mysql-connector-j'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
    useJUnitPlatform()
}
